" PLUGINS {{{1

call plug#begin('~/.nvim/plugged')

Plug 'tpope/vim-fugitive'
Plug 'JuliaLang/julia-vim'
Plug 'wting/rust.vim'
Plug 'klen/python-mode'
Plug 'vim-scripts/matchit.zip'
Plug 'haya14busa/incsearch.vim'
Plug 'vim-scripts/repmo.vim'
Plug 'cespare/vim-toml'
Plug 'chrisbra/csv.vim'
Plug 'flazz/vim-colorschemes'

call plug#end()

" }}}1 END PLUGINS
" GENERAL {{{1

filetype plugin indent on
syntax enable

set spelllang=en_gb

set noswapfile
set autoread
set autowriteall

set lazyredraw

set clipboard+=unnamed

set history=500

augroup NeoVimRC
  autocmd!
  autocmd FocusLost * :silent wall
  autocmd BufWritePre *
    \ if &ft !=? 'markdown' && expand('%:t') !~? '^n\?vimrc$' |
    \   :silent %s/\s\+$//e |
    \ endif
augroup END

" }}}1 END GENERAL
" MAPPINGS {{{1

" I DON'T LIKE SPACE AS A LEADER!!!!!!
let g:mapleader = "\\"
let g:maplocalleader = g:mapleader

nnoremap <leader>e :edit 
nnoremap <leader>d :bdelete<CR>

" TODO: maybe just :next and :prev
nnoremap <Right> :bnext<CR>
nnoremap <Left> :bprev<CR>
nnoremap <Up> <C-U>
nnoremap <Down> <C-D>

" ' is more convenient than , and has redundancy with `
nnoremap ' ,

" TODO: why doesn't lnoremap work here
inoremap <leader>jk <ESC>
cnoremap <leader>jk <ESC>
vnoremap <leader>jk <ESC>

nnoremap Y y$

" needs map so that matchit works
map <Tab> %

" }}}1 END MAPPINGS
" EDITING {{{1

set nrformats+=alpha

set backspace=indent,eol,start
set whichwrap=h,l
set nojoinspaces
set formatoptions+=j

set shiftround

" incsearch doesn't set magic in substitutions
cnoremap s/ s/\v

set ignorecase
set smartcase
set gdefault

" }}}1 END EDITING
" DISPLAY {{{1

set cursorline

set number
set relativenumber

set ruler
set rulerformat=%50(%{fugitive#statusline()}\ %t%=L\ %-4l\ \ C\ %-3c\ \ %P%)
set showcmd

set textwidth=80
set nowrap
" I reckon setting these all to 4 gives the best result nowadays
set tabstop=4  " number of columns <Tab> counts as visually
set shiftwidth=4  " columns added/removed when changing indent level
set softtabstop=4  " amount of whitespace corresponding to tab presses
set expandtab

" }}}1 END DISPLAY
" PLUGIN-SETTINGS {{{1
" FUGITIVE {{{2

nnoremap <leader>g :Gstatus<CR>

" }}}2 END FUGITIVE
" RUST.VIM {{{2

" fold braced blocks
let g:rust_fold = 1

" }}}2 END RUST
" PYTHON-MODE {{{2

" USE PYTHON3 YOU WHORES!
"let g:python_host_prog = 'python3'
"let g:pymode_python = 'python3'

" TODO: see if this can be done with python-mode options
set foldlevelstart=99

let g:pymode_rope = 0
let g:pymode_lint_checkers = ['pep8', 'pep257', 'pylint', 'pyflakes']
let g:pymode_syntax_print_as_function = 1
let g:pymode_options_colorcolumn = 0

" }}}2 END PYTHON-MODE
" INCSEARCH.VIM {{{2

" incrementally search whole page
map / <Plug>(incsearch-forward)
map ? <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)

" turn off highlighting when non-search related key is pressed
let g:incsearch#auto_nohlsearch = 1
map n <Plug>(incsearch-nohl-n)
map N <Plug>(incsearch-nohl-N)
map * <Plug>(incsearch-nohl-*)
map # <Plug>(incsearch-nohl-#)
map g* <Plug>(incsearch-nohl-g*)
map g# <Plug>(incsearch-nohl-g#)

" n always forward and N always backward
let g:incsearch#consistent_n_direction = 1

" automatically set magic with no portability problems
let g:incsearch#magic = '\v'

" }}}2 END INCSEARCH
" COLORSCHEMES {{{2

colorscheme solarized
set background=dark

" }}}2 END COLORSCHEMES
" }}}1 END PLUGIN-SETTINGS

" vim: foldmethod=marker foldlevel=0
