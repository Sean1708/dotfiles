" PLUGINS {{{1

let g:plug_window = 'if 2*winheight(0) < winwidth(0) | vertical topleft new | else | topleft new | endif'

call plug#begin('~/.nvim/plugged')

Plug 'benekastah/neomake'
Plug 'tpope/vim-fugitive'
Plug 'JuliaLang/julia-vim'
Plug 'rust-lang/rust.vim'
Plug 'hdima/python-syntax'
Plug 'vim-scripts/matchit.zip'
Plug 'haya14busa/incsearch.vim'
Plug 'vim-scripts/repmo.vim'
Plug 'cespare/vim-toml'
Plug 'chrisbra/csv.vim'
Plug 'flazz/vim-colorschemes'

call plug#end()

" }}}1 END PLUGINS
" GENERAL {{{1

filetype plugin indent on
syntax enable

set spelllang=en_gb

set noswapfile
set autoread
set autowriteall

set lazyredraw

set clipboard+=unnamed

set history=500

augroup NeoVimRC
  autocmd!
  autocmd FocusLost * :silent wall
  autocmd BufWritePre *
    \ if &ft !=? 'markdown' && expand('%:t') !~ '\v\c^n\?vimrc$' |
    \   silent %s/\s\+$//e |
    \ endif
augroup END

" }}}1 END GENERAL
" MAPPINGS {{{1

let g:mapleader = '\'
let g:maplocalleader = g:mapleader

inoremap <leader>jk <ESC>
vnoremap <leader>jk <ESC>

nnoremap <S-Left> <C-W>h
nnoremap <S-Down> <C-W>j
nnoremap <S-Up> <C-W>k
nnoremap <S-Right> <C-W>l
nnoremap <Right> :bnext<CR>
nnoremap <Left> :bprev<CR>

nnoremap <Up> <C-U>
nnoremap <Down> <C-D>

" ' is more convenient than , and has redundancy with `
nnoremap ' ,

nnoremap Y y$

" needs map so that matchit works
map <Tab> %

nnoremap K :call utils#KeywordPrg()<CR>

" }}}1 END MAPPINGS
" EDITING {{{1

set nrformats+=alpha

set whichwrap=h,l
set nojoinspaces
set formatoptions+=j

set shiftround

" incsearch doesn't set magic in substitutions
cnoremap s/ s/\v

set ignorecase
set smartcase
set gdefault

" }}}1 END EDITING
" DISPLAY {{{1

set cursorline
let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1

set number
set relativenumber

set ruler
set rulerformat=%50(%{fugitive#statusline()}\ %t%=L\ %-4l\ \ C\ %-3c\ \ %P%)
set showcmd

set textwidth=80
set nowrap
" I reckon setting these all to 4 gives the best result nowadays
set tabstop=4  " number of columns <Tab> counts as visually
set shiftwidth=4  " columns added/removed when changing indent level
set softtabstop=4  " amount of whitespace corresponding to tab presses
set expandtab

" }}}1 END DISPLAY
" PLUGIN-SETTINGS {{{1
" FUGITIVE {{{2

nnoremap <leader>g :Gstatus<CR>

" }}}2 END FUGITIVE
" RUST.VIM {{{2

let g:rust_fold = 1
let g:rust_bang_comment_leader = 1

" }}}2 END RUST
" PYTHON-SYNTAX {{{2

let g:python_highlight_indent_errors = 0
let g:python_highlight_space_errors = 0
let g:python_highlight_all = 1

" }}}2 END PYTHON-SYNTAX
" INCSEARCH.VIM {{{2

map / <Plug>(incsearch-forward)
map ? <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)

let g:incsearch#auto_nohlsearch = 1
map n <Plug>(incsearch-nohl-n)
map N <Plug>(incsearch-nohl-N)
map * <Plug>(incsearch-nohl-*)
map # <Plug>(incsearch-nohl-#)
map g* <Plug>(incsearch-nohl-g*)
map g# <Plug>(incsearch-nohl-g#)

let g:incsearch#consistent_n_direction = 1

let g:incsearch#magic = '\v'

" }}}2 END INCSEARCH
" COLORSCHEMES {{{2

colorscheme solarized
set background=dark

" }}}2 END COLORSCHEMES
" }}}1 END PLUGIN-SETTINGS

" vim: foldmethod=marker foldlevel=0
