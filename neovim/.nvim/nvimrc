" PLUGINS {{{1
" VUNDLE {{{2

" required for vundle
filetype off

" add vundle to the runtime path and initialise it
set rtp+=~/.nvim/bundle/Vundle.vim
call vundle#rc('~/.nvim/bundle')

" use vundle on vundle
Plugin 'gmarik/Vundle.vim'

" VUNDLE PACKAGES
Plugin 'klen/python-mode'
Plugin 'JuliaLang/julia-vim'
Plugin 'wting/rust.vim'
Plugin 'vim-scripts/repmo.vim'
Plugin 'haya14busa/incsearch.vim'
Plugin 'chrisbra/csv.vim'
Plugin 'flazz/vim-colorschemes'


"" VUNDLE HELP
"   :PluginList          - list configured plugins
"   :PluginInstall(!)    - install (update) plugins
"   :PluginSearch(!) foo - search (or refresh cache first) for foo
"   :PluginClean(!)      - confirm (or auto-approve) removal of unused plugins
"  
"   see :h vundle for more details or wiki for FAQ

" }}}2 END VUNDLE
" PYTHON-MODE {{{2
" USE PYTHON3 YOU WHORES!
"let g:python_host_prog = 'python3'
"let g:pymode_python = 'python3'

" start with all folds open
" see if this can be done with python-mode options
set foldlevelstart=99

" don't use rope
let g:pymode_rope = 0
" use custom set of linters
let g:pymode_lint_checkers = ['pep8', 'pep257', 'pylint', 'pyflakes']
" ensure print is highlighted as a function
let g:pymode_syntax_print_as_function = 1
" remove annoying column
let g:pymode_options_colorcolumn = 0

" }}}2 END PYTHON-MODE
" INCSEARCH.VIM {{{2
" incrementally search whole page
map / <Plug>(incsearch-forward)
map ? <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)

" turn off highlighting when non-search related key is pressed
let g:incsearch#auto_nohlsearch = 1
map n <Plug>(incsearch-nohl-n)
map N <Plug>(incsearch-nohl-N)
map * <Plug>(incsearch-nohl-*)
map # <Plug>(incsearch-nohl-#)
map g* <Plug>(incsearch-nohl-g*)
map g# <Plug>(incsearch-nohl-g#)

" n always forward and N always backward
let g:incsearch#consistent_n_direction = 1

" automatically set magic with no portability problems
let g:incsearch#magic = '\v'
" }}}2 END INCSEARCH.VIM
" RUST.VIM {{{2
" fold braced blocks
let g:rust_fold = 1
" }}}2
" }}}1 END PLUGINS
" GENERAL {{{1
filetype plugin indent on

set nobackup
set noswapfile

set autowrite

set history=50
" }}}1 END GENERAL
" MAPPINGS {{{1
let mapleader = " "
let maplocalleader = "\\"

nnoremap <localleader>e :argedit 
nnoremap <localleader>n :next<CR>
nnoremap <localleader>p :previous<CR>

" ' is more convenient than , and has redundancy with `
nnoremap ' ,

inoremap jk <ESC>
vnoremap jk <ESC>

nnoremap Y y$

noremap <Tab> %

nnoremap <Up> <C-Y>
nnoremap <Down> <C-E>
nnoremap <Right> <C-D>
nnoremap <Left> <C-U>

" }}}1 END MAPPINGS
" EDITING {{{1
set backspace=indent,eol,start
set whichwrap=h,l
set nojoinspaces

set timeout
set timeoutlen=500
" }}}1 END EDITING
" SEARCHING {{{1
" incsearch doesn't set magic in substitutions
cnoremap s/ s/\v

set ignorecase
set smartcase
set gdefault
" }}}1 END SEARCHING
" VISUAL {{{1
colorscheme solarized
syntax on

set cursorline

set number
set relativenumber

set ruler
set showcmd

set textwidth=80
set nowrap
set tabstop=4  " number of columns <Tab> counts as in normal mode
set shiftwidth=4  " columns added/removed when changing indent level
set softtabstop=4  " amount of whitespace corresponding to tab presses
set expandtab
" }}}1 END VISUAL


" vim: foldmethod=marker foldlevel=0
